import AuthContext from '@/app/context/AuthContext'
import ModalProvider from '@/components/providers/modal-provider'
import ProgressBarProvider from '@/components/providers/progressbar-provider'
import QueryProvider from '@/components/providers/query-provider'
import { SocketProvider } from '@/components/providers/socket-provider'
import { ThemeProvider } from '@/components/providers/theme-provider'
import { Toaster } from '@/components/ui/toaster'
import { ChildrenType, ProvidersType } from '@/lib/type'
import { cn } from '@/lib/utils'
import type { Metadata } from 'next'
import { Noto_Sans } from 'next/font/google'
import './globals.css'

const inter = Noto_Sans({ subsets: ['latin'], weight: "400" })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const buildProvidersTree = (providers: Array<ProvidersType>) => {
  const initialProviders = ({ children }: ChildrenType ) => (
    <>
      {children}
    </>
  )

  return providers.reduce((AccumutaltedProviders: React.ElementType, [Provider, props = {}]: ProvidersType) => {
    return ({ children }: ChildrenType) => {
      return (
        <AccumutaltedProviders>
          <Provider {...props}>
            {children}
          </Provider>
        </AccumutaltedProviders>
      )
    }
  }, initialProviders)
}

export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {
  const ProvidersTree = buildProvidersTree([
    [AuthContext, {}],
    [ThemeProvider, { attribute: "class", defaultTheme: "dark", enableSystem: false, storageKey: "neptune-theme" }],
    [SocketProvider, {}],
    [QueryProvider, {}],
    [ProgressBarProvider, {}]
  ])

  return (
    <html lang="en" suppressHydrationWarning>
      <body className={cn(inter.className, "bg-white dark:bg-dark-primary")}>
        <ProvidersTree>
          <ModalProvider />
          {children}
          <Toaster />
        </ProvidersTree>
      </body>
    </html>
  )
}
